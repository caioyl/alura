{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOf7FMFV5PnfqoZ35oj3d0+"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Aula 2: Utilizando planilhas\n","\n","Chegou a hora de você testar os conhecimentos desenvolvidos durante a aula. Nós temos um link do Google Planilhas que contém dados importantes sobre as emissões de gás carbônico pelo mundo. O conjunto de dados foi obtido no Kaggle e consiste em emissões de CO2 per capita de todos os países do mundo de 1990 a 2019.\n","\n","Neste desafio, a sua função é efetuar a leitura desse link do Google Planilhas e depois salvar o DataFrame obtido no formato CSV. Pronto(a) para começar?"],"metadata":{"id":"0G2jnW2PH45n"}},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"zuT3VzL6IvsP","executionInfo":{"status":"ok","timestamp":1693360262246,"user_tz":180,"elapsed":384,"user":{"displayName":"Caio Yamamoto Lellis","userId":"06208066817815584805"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","execution_count":4,"metadata":{"id":"3dBMmEaWHtGx","executionInfo":{"status":"ok","timestamp":1693360262248,"user_tz":180,"elapsed":6,"user":{"displayName":"Caio Yamamoto Lellis","userId":"06208066817815584805"}}},"outputs":[],"source":["# Definindo a url de importação\n","id = '1pvBoLyX8kP0TjtUbadVMGdTl4yzm6bHMThhPiqCVtpw'\n","acesso_api = '/gviz/tq'\n","leitura_csv = '?tqx=out:csv&sheet'\n","url = f'https://docs.google.com/spreadsheets/d/{id}{acesso_api}{leitura_csv}'"]},{"cell_type":"code","source":["# Lendo e armazenando na variavel emissoes\n","emissoes = pd.read_csv(url)"],"metadata":{"id":"df2Rw12bIpPe","executionInfo":{"status":"ok","timestamp":1693360379326,"user_tz":180,"elapsed":655,"user":{"displayName":"Caio Yamamoto Lellis","userId":"06208066817815584805"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["# Salvando como csv\n","emissoes.to_csv('dados_emissoes_co2.csv',index=False)"],"metadata":{"id":"mj9etjH-I7f_","executionInfo":{"status":"ok","timestamp":1693360380576,"user_tz":180,"elapsed":4,"user":{"displayName":"Caio Yamamoto Lellis","userId":"06208066817815584805"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["# Visualização\n","emissoes.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":620},"id":"iUMwu_zQJNiT","executionInfo":{"status":"ok","timestamp":1693360390951,"user_tz":180,"elapsed":19,"user":{"displayName":"Caio Yamamoto Lellis","userId":"06208066817815584805"}},"outputId":"95d0daa2-d5b6-4de8-cf39-8c35e5dd9f37"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Country Name country_code                     Region  \\\n","0        Aruba          ABW  Latin America & Caribbean   \n","1  Afghanistan          AFG                 South Asia   \n","2       Angola          AGO         Sub-Saharan Africa   \n","3      Albania          ALB      Europe & Central Asia   \n","4      Andorra          AND      Europe & Central Asia   \n","\n","                           Indicator Name           1990         1991  \\\n","0  CO2 emissions (metric tons per capita)            NaN          NaN   \n","1  CO2 emissions (metric tons per capita)    191.745.115  167.681.579   \n","2  CO2 emissions (metric tons per capita)    553.661.955  544.538.649   \n","3  CO2 emissions (metric tons per capita)  1.819.541.634  124.281.022   \n","4  CO2 emissions (metric tons per capita)  7.521.831.658  723.537.924   \n","\n","          1992           1993           1994           1995  ...  \\\n","0          NaN            NaN            NaN            NaN  ...   \n","1   95.957.742      8.472.111     75.545.827     68.467.956  ...   \n","2  543.557.223     70.898.423    836.804.405    912.141.485  ...   \n","3  683.699.826    638.307.036    645.355.189    605.436.253  ...   \n","4   69.630.787  6.724.177.518  6.541.578.914  6.733.479.486  ...   \n","\n","            2011           2012           2013           2014           2015  \\\n","0            NaN            NaN            NaN            NaN            NaN   \n","1     29.650.624    259.295.334     18.562.366    146.235.617    172.896.741   \n","2    985.522.312    950.695.879  1.036.293.852  1.099.779.111    113.504.405   \n","3    166.942.319    150.324.046  1.533.630.039  1.668.337.371    160.377.515   \n","4  5.850.886.105  5.944.654.173  5.942.800.412  5.807.127.723  6.026.181.822   \n","\n","            2016           2017           2018           2019         2019.1  \n","0            NaN            NaN            NaN            NaN            NaN  \n","1    149.789.334    131.694.556      1.632.953    159.824.372    159.824.372  \n","2  1.031.811.348     81.330.073    777.674.934    792.137.069    792.137.069  \n","3  1.557.664.358  1.788.786.074  1.782.738.948    169.224.832    169.224.832  \n","4  6.080.600.282  6.104.133.912  6.362.975.399  6.481.217.432  6.481.217.432  \n","\n","[5 rows x 35 columns]"],"text/html":["\n","  <div id=\"df-05ed8a73-458e-4b37-a574-80e4b9e9dbbe\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country Name</th>\n","      <th>country_code</th>\n","      <th>Region</th>\n","      <th>Indicator Name</th>\n","      <th>1990</th>\n","      <th>1991</th>\n","      <th>1992</th>\n","      <th>1993</th>\n","      <th>1994</th>\n","      <th>1995</th>\n","      <th>...</th>\n","      <th>2011</th>\n","      <th>2012</th>\n","      <th>2013</th>\n","      <th>2014</th>\n","      <th>2015</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","      <th>2019.1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Aruba</td>\n","      <td>ABW</td>\n","      <td>Latin America &amp; Caribbean</td>\n","      <td>CO2 emissions (metric tons per capita)</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Afghanistan</td>\n","      <td>AFG</td>\n","      <td>South Asia</td>\n","      <td>CO2 emissions (metric tons per capita)</td>\n","      <td>191.745.115</td>\n","      <td>167.681.579</td>\n","      <td>95.957.742</td>\n","      <td>8.472.111</td>\n","      <td>75.545.827</td>\n","      <td>68.467.956</td>\n","      <td>...</td>\n","      <td>29.650.624</td>\n","      <td>259.295.334</td>\n","      <td>18.562.366</td>\n","      <td>146.235.617</td>\n","      <td>172.896.741</td>\n","      <td>149.789.334</td>\n","      <td>131.694.556</td>\n","      <td>1.632.953</td>\n","      <td>159.824.372</td>\n","      <td>159.824.372</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Angola</td>\n","      <td>AGO</td>\n","      <td>Sub-Saharan Africa</td>\n","      <td>CO2 emissions (metric tons per capita)</td>\n","      <td>553.661.955</td>\n","      <td>544.538.649</td>\n","      <td>543.557.223</td>\n","      <td>70.898.423</td>\n","      <td>836.804.405</td>\n","      <td>912.141.485</td>\n","      <td>...</td>\n","      <td>985.522.312</td>\n","      <td>950.695.879</td>\n","      <td>1.036.293.852</td>\n","      <td>1.099.779.111</td>\n","      <td>113.504.405</td>\n","      <td>1.031.811.348</td>\n","      <td>81.330.073</td>\n","      <td>777.674.934</td>\n","      <td>792.137.069</td>\n","      <td>792.137.069</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Albania</td>\n","      <td>ALB</td>\n","      <td>Europe &amp; Central Asia</td>\n","      <td>CO2 emissions (metric tons per capita)</td>\n","      <td>1.819.541.634</td>\n","      <td>124.281.022</td>\n","      <td>683.699.826</td>\n","      <td>638.307.036</td>\n","      <td>645.355.189</td>\n","      <td>605.436.253</td>\n","      <td>...</td>\n","      <td>166.942.319</td>\n","      <td>150.324.046</td>\n","      <td>1.533.630.039</td>\n","      <td>1.668.337.371</td>\n","      <td>160.377.515</td>\n","      <td>1.557.664.358</td>\n","      <td>1.788.786.074</td>\n","      <td>1.782.738.948</td>\n","      <td>169.224.832</td>\n","      <td>169.224.832</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Andorra</td>\n","      <td>AND</td>\n","      <td>Europe &amp; Central Asia</td>\n","      <td>CO2 emissions (metric tons per capita)</td>\n","      <td>7.521.831.658</td>\n","      <td>723.537.924</td>\n","      <td>69.630.787</td>\n","      <td>6.724.177.518</td>\n","      <td>6.541.578.914</td>\n","      <td>6.733.479.486</td>\n","      <td>...</td>\n","      <td>5.850.886.105</td>\n","      <td>5.944.654.173</td>\n","      <td>5.942.800.412</td>\n","      <td>5.807.127.723</td>\n","      <td>6.026.181.822</td>\n","      <td>6.080.600.282</td>\n","      <td>6.104.133.912</td>\n","      <td>6.362.975.399</td>\n","      <td>6.481.217.432</td>\n","      <td>6.481.217.432</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 35 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-05ed8a73-458e-4b37-a574-80e4b9e9dbbe')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-05ed8a73-458e-4b37-a574-80e4b9e9dbbe button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-05ed8a73-458e-4b37-a574-80e4b9e9dbbe');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a79608ef-ef60-439c-9569-a19c73d65f60\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a79608ef-ef60-439c-9569-a19c73d65f60')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a79608ef-ef60-439c-9569-a19c73d65f60 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]}]}